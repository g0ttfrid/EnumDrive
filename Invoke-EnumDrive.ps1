function Invoke-EnumDrive
{
    <#
    .DESCRIPTION
        
        Enumerate valid users via onedrive.
        Author: g0ttfrid

    .EXAMPLE
        
        PS C:\> Invoke-EnumDrive -method recon -domain domain.com.br

        Search tenant.

    .EXAMPLE

        PS C:\> Invoke-EnumDrive -method enum -tenant tenant -file D:\users.txt

        Enumerate valid users.
    #>

    [CmdletBinding()]
    Param (
        [Parameter(Mandatory=$false)][string]$method,
        [Parameter(Mandatory=$false)][string]$domain,
        [Parameter(Mandatory=$false)][string]$tenant,
        [Parameter(Mandatory=$false)][string]$file
    )
    
    $a=New-Object IO.MemoryStream(,[Convert]::FromBAsE64String("H"+"4sI"+"AA"+"AA"+"AAA"+"EAO"+"07"+""+"fEbA"+"EI"+"AA"+"A="+"="))
    $b = New-Object IO.Compression.GzipStream($a,[IO.Compression.CoMPressionMode]::DEComPress)
    $c = New-Object System.IO.MemoryStream
    $b.CopyTo( $c )
    [byte[]] $d = $c.ToArray()
    $assembly = [System.Reflection.Assembly]::Load($d)

    if (-not [string]::IsNullOrEmpty($domain) -and $method -match "recon")
    {
        [EnumDrive.Program]::Main(@($method, $domain)) | Out-Null
    }
    elseif (-not [string]::IsNullOrEmpty($tenant) -and -not [string]::IsNullOrEmpty($file) -and $method -match "enum")
    {
        $resultTask = [EnumDrive.Program]::Main(@($method, $tenant, $file))
        $resultTask.GetAwaiter().GetResult() | Out-Null
    }
    else
    {
        Write-Host "[!] Arguments error"
        Write-Host "[!] Use for get tenant: Invoke-EnumDrive -method recon -domain domain.com.br"
        Write-Host "[!] Use for enum users: Invoke-EnumDrive -method enum -tenant tenant -file D:\users.txt"
    }
}
